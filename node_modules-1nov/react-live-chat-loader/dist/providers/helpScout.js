"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
const domain = 'https://beacon-v2.helpscout.net';

/* eslint:disable */
const loadScript = () => {
  if (window.Beacon) return;

  (function (e, t, n) {
    function a() {
      var _e$parentNode;

      const e = t.getElementsByTagName('script')[0],
            n = t.createElement('script');
      n.async = !0, n.src = domain, (_e$parentNode = e.parentNode) === null || _e$parentNode === void 0 ? void 0 : _e$parentNode.insertBefore(n, e);
    }

    if ( //eslint-disable-next-line @typescript-eslint/no-explicit-any
    e.Beacon = n = function (t, n, a) {
      e.Beacon.readyQueue.push({
        method: t,
        options: n,
        data: a
      });
    }, n.readyQueue = [], 'complete' === t.readyState) return a();
    e.attachEvent ? e.attachEvent('onload', a) : e.addEventListener('load', a, !1); //eslint-disable-next-line @typescript-eslint/no-empty-function
  })(window, document, window.Beacon || function () {});
};
/* eslint:enable */


const load = ({
  providerKey,
  setState
}) => {
  loadScript();
  window.Beacon('init', providerKey);
  setTimeout(() => setState('complete'), 2000);
};

const open = () => window.Beacon('open');

const close = () => window.Beacon('close');

var _default = {
  domain,
  load,
  open,
  close
};
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wcm92aWRlcnMvaGVscFNjb3V0LnRzIl0sIm5hbWVzIjpbImRvbWFpbiIsImxvYWRTY3JpcHQiLCJ3aW5kb3ciLCJCZWFjb24iLCJlIiwidCIsIm4iLCJhIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJjcmVhdGVFbGVtZW50IiwiYXN5bmMiLCJzcmMiLCJwYXJlbnROb2RlIiwiaW5zZXJ0QmVmb3JlIiwicmVhZHlRdWV1ZSIsInB1c2giLCJtZXRob2QiLCJvcHRpb25zIiwiZGF0YSIsInJlYWR5U3RhdGUiLCJhdHRhY2hFdmVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJkb2N1bWVudCIsImxvYWQiLCJwcm92aWRlcktleSIsInNldFN0YXRlIiwic2V0VGltZW91dCIsIm9wZW4iLCJjbG9zZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRUEsTUFBTUEsTUFBTSxHQUFHLGlDQUFmOztBQVdBO0FBQ0EsTUFBTUMsVUFBVSxHQUFHLE1BQU07QUFDdkIsTUFBSUMsTUFBTSxDQUFDQyxNQUFYLEVBQW1COztBQUNsQixHQUFDLFVBQVNDLENBQVQsRUFBWUMsQ0FBWixFQUFlQyxDQUFmLEVBQWtCO0FBQ2xCLGFBQVNDLENBQVQsR0FBYTtBQUFBOztBQUNYLFlBQU1ILENBQUMsR0FBR0MsQ0FBQyxDQUFDRyxvQkFBRixDQUF1QixRQUF2QixFQUFpQyxDQUFqQyxDQUFWO0FBQUEsWUFDRUYsQ0FBQyxHQUFHRCxDQUFDLENBQUNJLGFBQUYsQ0FBZ0IsUUFBaEIsQ0FETjtBQUVFSCxNQUFBQSxDQUFDLENBQUNJLEtBQUYsR0FBVSxDQUFDLENBQVosRUFBaUJKLENBQUMsQ0FBQ0ssR0FBRixHQUFRWCxNQUF6QixtQkFBa0NJLENBQUMsQ0FBQ1EsVUFBcEMsa0RBQWtDLGNBQWNDLFlBQWQsQ0FBMkJQLENBQTNCLEVBQThCRixDQUE5QixDQUFsQztBQUNGOztBQUNELFNBQ0U7QUFDRUEsSUFBQUEsQ0FBQyxDQUFDRCxNQUFGLEdBQVdHLENBQUMsR0FBRyxVQUFTRCxDQUFULEVBQWlCQyxDQUFqQixFQUF5QkMsQ0FBekIsRUFBaUM7QUFDaERILE1BQUFBLENBQUMsQ0FBQ0QsTUFBRixDQUFTVyxVQUFULENBQW9CQyxJQUFwQixDQUF5QjtBQUFFQyxRQUFBQSxNQUFNLEVBQUVYLENBQVY7QUFBYVksUUFBQUEsT0FBTyxFQUFFWCxDQUF0QjtBQUF5QlksUUFBQUEsSUFBSSxFQUFFWDtBQUEvQixPQUF6QjtBQUNELEtBRkEsRUFHQUQsQ0FBQyxDQUFDUSxVQUFGLEdBQWUsRUFIZixFQUlELGVBQWVULENBQUMsQ0FBQ2MsVUFObkIsRUFRRSxPQUFPWixDQUFDLEVBQVI7QUFDRkgsSUFBQUEsQ0FBQyxDQUFDZ0IsV0FBRixHQUNJaEIsQ0FBQyxDQUFDZ0IsV0FBRixDQUFjLFFBQWQsRUFBd0JiLENBQXhCLENBREosR0FFSUgsQ0FBQyxDQUFDaUIsZ0JBQUYsQ0FBbUIsTUFBbkIsRUFBMkJkLENBQTNCLEVBQThCLENBQUMsQ0FBL0IsQ0FGSixDQWZrQixDQWtCbEI7QUFDRCxHQW5CQSxFQW1CRUwsTUFuQkYsRUFtQlVvQixRQW5CVixFQW1Cb0JwQixNQUFNLENBQUNDLE1BQVAsSUFBaUIsWUFBVyxDQUFFLENBbkJsRDtBQW9CRixDQXRCRDtBQXVCQTs7O0FBRUEsTUFBTW9CLElBQUksR0FBRyxDQUFDO0FBQ1pDLEVBQUFBLFdBRFk7QUFFWkMsRUFBQUE7QUFGWSxDQUFELEtBTUQ7QUFDVnhCLEVBQUFBLFVBQVU7QUFDVkMsRUFBQUEsTUFBTSxDQUFDQyxNQUFQLENBQWMsTUFBZCxFQUFzQnFCLFdBQXRCO0FBQ0FFLEVBQUFBLFVBQVUsQ0FBQyxNQUFNRCxRQUFRLENBQUMsVUFBRCxDQUFmLEVBQTZCLElBQTdCLENBQVY7QUFDRCxDQVZEOztBQVlBLE1BQU1FLElBQUksR0FBRyxNQUFZekIsTUFBTSxDQUFDQyxNQUFQLENBQWMsTUFBZCxDQUF6Qjs7QUFDQSxNQUFNeUIsS0FBSyxHQUFHLE1BQVkxQixNQUFNLENBQUNDLE1BQVAsQ0FBYyxPQUFkLENBQTFCOztlQUVlO0FBQ2JILEVBQUFBLE1BRGE7QUFFYnVCLEVBQUFBLElBRmE7QUFHYkksRUFBQUEsSUFIYTtBQUliQyxFQUFBQTtBQUphLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdGF0ZSB9IGZyb20gJ3R5cGVzJ1xuXG5jb25zdCBkb21haW4gPSAnaHR0cHM6Ly9iZWFjb24tdjIuaGVscHNjb3V0Lm5ldCdcblxuZGVjbGFyZSBnbG9iYWwge1xuICBpbnRlcmZhY2UgV2luZG93IHtcbiAgICAvL2VzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gICAgQmVhY29uOiBhbnlcbiAgICAvL2VzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gICAgYXR0YWNoRXZlbnQ6IGFueVxuICB9XG59XG5cbi8qIGVzbGludDpkaXNhYmxlICovXG5jb25zdCBsb2FkU2NyaXB0ID0gKCkgPT4ge1xuICBpZiAod2luZG93LkJlYWNvbikgcmV0dXJuXG4gIDsoZnVuY3Rpb24oZSwgdCwgbikge1xuICAgIGZ1bmN0aW9uIGEoKSB7XG4gICAgICBjb25zdCBlID0gdC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnc2NyaXB0JylbMF0sXG4gICAgICAgIG4gPSB0LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpXG4gICAgICA7KG4uYXN5bmMgPSAhMCksIChuLnNyYyA9IGRvbWFpbiksIGUucGFyZW50Tm9kZT8uaW5zZXJ0QmVmb3JlKG4sIGUpXG4gICAgfVxuICAgIGlmIChcbiAgICAgIC8vZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICAgICgoZS5CZWFjb24gPSBuID0gZnVuY3Rpb24odDogYW55LCBuOiBhbnksIGE6IGFueSkge1xuICAgICAgICBlLkJlYWNvbi5yZWFkeVF1ZXVlLnB1c2goeyBtZXRob2Q6IHQsIG9wdGlvbnM6IG4sIGRhdGE6IGEgfSlcbiAgICAgIH0pLFxuICAgICAgKG4ucmVhZHlRdWV1ZSA9IFtdKSxcbiAgICAgICdjb21wbGV0ZScgPT09IHQucmVhZHlTdGF0ZSlcbiAgICApXG4gICAgICByZXR1cm4gYSgpXG4gICAgZS5hdHRhY2hFdmVudFxuICAgICAgPyBlLmF0dGFjaEV2ZW50KCdvbmxvYWQnLCBhKVxuICAgICAgOiBlLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBhLCAhMSlcbiAgICAvL2VzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZW1wdHktZnVuY3Rpb25cbiAgfSkod2luZG93LCBkb2N1bWVudCwgd2luZG93LkJlYWNvbiB8fCBmdW5jdGlvbigpIHt9KVxufVxuLyogZXNsaW50OmVuYWJsZSAqL1xuXG5jb25zdCBsb2FkID0gKHtcbiAgcHJvdmlkZXJLZXksXG4gIHNldFN0YXRlXG59OiB7XG4gIHByb3ZpZGVyS2V5OiBzdHJpbmdcbiAgc2V0U3RhdGU6IChzdGF0ZTogU3RhdGUpID0+IHZvaWRcbn0pOiB2b2lkID0+IHtcbiAgbG9hZFNjcmlwdCgpXG4gIHdpbmRvdy5CZWFjb24oJ2luaXQnLCBwcm92aWRlcktleSlcbiAgc2V0VGltZW91dCgoKSA9PiBzZXRTdGF0ZSgnY29tcGxldGUnKSwgMjAwMClcbn1cblxuY29uc3Qgb3BlbiA9ICgpOiB2b2lkID0+IHdpbmRvdy5CZWFjb24oJ29wZW4nKVxuY29uc3QgY2xvc2UgPSAoKTogdm9pZCA9PiB3aW5kb3cuQmVhY29uKCdjbG9zZScpXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZG9tYWluLFxuICBsb2FkLFxuICBvcGVuLFxuICBjbG9zZVxufVxuIl19