"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
const domain = 'https://userlike-cdn-widgets.s3-eu-west-1.amazonaws.com';
const maxAttempts = 10;
let currentLoadAttempt = 0;
let currentOpenAttempt = 0;

/* eslint-disable */
const loadScript = providerKey => {
  if (window.userlike) return;
  var d = document;

  function l() {
    var _x$parentNode;

    var s = d.createElement('script');
    s.type = 'text/javascript';
    s.async = true;
    s.src = `${domain}/${providerKey}.js`;
    var x = d.getElementsByTagName('script')[0];
    (_x$parentNode = x.parentNode) === null || _x$parentNode === void 0 ? void 0 : _x$parentNode.insertBefore(s, x);
  }

  l();
};
/* eslint-enable */


const attemptLoad = setState => {
  if (currentLoadAttempt === maxAttempts) {
    return;
  }

  if (!window.userlike) {
    currentLoadAttempt += 1;
    setTimeout(() => attemptLoad(setState), 1000); // Try every second

    return;
  }

  setTimeout(() => setState('complete'), 2000);
};

const load = ({
  providerKey,
  setState
}) => {
  loadScript(providerKey);
  attemptLoad(setState);
};

const open = () => {
  if (currentOpenAttempt === maxAttempts) {
    return;
  }

  if (!window.userlike) {
    currentOpenAttempt += 1;
    setTimeout(open, 1000); // Try every second

    return;
  }

  window.userlike.userlikeStartChat();
};

const close = () => window.userlike && window.userlike.userlikeQuitChat();

var _default = {
  domain,
  load,
  open,
  close
};
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wcm92aWRlcnMvdXNlcmxpa2UudHMiXSwibmFtZXMiOlsiZG9tYWluIiwibWF4QXR0ZW1wdHMiLCJjdXJyZW50TG9hZEF0dGVtcHQiLCJjdXJyZW50T3BlbkF0dGVtcHQiLCJsb2FkU2NyaXB0IiwicHJvdmlkZXJLZXkiLCJ3aW5kb3ciLCJ1c2VybGlrZSIsImQiLCJkb2N1bWVudCIsImwiLCJzIiwiY3JlYXRlRWxlbWVudCIsInR5cGUiLCJhc3luYyIsInNyYyIsIngiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInBhcmVudE5vZGUiLCJpbnNlcnRCZWZvcmUiLCJhdHRlbXB0TG9hZCIsInNldFN0YXRlIiwic2V0VGltZW91dCIsImxvYWQiLCJvcGVuIiwidXNlcmxpa2VTdGFydENoYXQiLCJjbG9zZSIsInVzZXJsaWtlUXVpdENoYXQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUVBLE1BQU1BLE1BQU0sR0FBRyx5REFBZjtBQUNBLE1BQU1DLFdBQVcsR0FBRyxFQUFwQjtBQUNBLElBQUlDLGtCQUFrQixHQUFHLENBQXpCO0FBQ0EsSUFBSUMsa0JBQWtCLEdBQUcsQ0FBekI7O0FBWUE7QUFDQSxNQUFNQyxVQUFVLEdBQUlDLFdBQUQsSUFBeUI7QUFDMUMsTUFBSUMsTUFBTSxDQUFDQyxRQUFYLEVBQXFCO0FBRXJCLE1BQUlDLENBQUMsR0FBR0MsUUFBUjs7QUFDQSxXQUFTQyxDQUFULEdBQWE7QUFBQTs7QUFDWCxRQUFJQyxDQUFDLEdBQUdILENBQUMsQ0FBQ0ksYUFBRixDQUFnQixRQUFoQixDQUFSO0FBQ0FELElBQUFBLENBQUMsQ0FBQ0UsSUFBRixHQUFTLGlCQUFUO0FBQ0FGLElBQUFBLENBQUMsQ0FBQ0csS0FBRixHQUFVLElBQVY7QUFDQUgsSUFBQUEsQ0FBQyxDQUFDSSxHQUFGLEdBQVMsR0FBRWYsTUFBTyxJQUFHSyxXQUFZLEtBQWpDO0FBQ0EsUUFBSVcsQ0FBQyxHQUFHUixDQUFDLENBQUNTLG9CQUFGLENBQXVCLFFBQXZCLEVBQWlDLENBQWpDLENBQVI7QUFDQSxxQkFBQUQsQ0FBQyxDQUFDRSxVQUFGLGdFQUFjQyxZQUFkLENBQTJCUixDQUEzQixFQUE4QkssQ0FBOUI7QUFDRDs7QUFDRE4sRUFBQUEsQ0FBQztBQUNGLENBYkQ7QUFjQTs7O0FBRUEsTUFBTVUsV0FBVyxHQUFJQyxRQUFELElBQXNDO0FBQ3hELE1BQUluQixrQkFBa0IsS0FBS0QsV0FBM0IsRUFBd0M7QUFDdEM7QUFDRDs7QUFFRCxNQUFJLENBQUNLLE1BQU0sQ0FBQ0MsUUFBWixFQUFzQjtBQUNwQkwsSUFBQUEsa0JBQWtCLElBQUksQ0FBdEI7QUFDQW9CLElBQUFBLFVBQVUsQ0FBQyxNQUFNRixXQUFXLENBQUNDLFFBQUQsQ0FBbEIsRUFBOEIsSUFBOUIsQ0FBVixDQUZvQixDQUUwQjs7QUFDOUM7QUFDRDs7QUFFREMsRUFBQUEsVUFBVSxDQUFDLE1BQU1ELFFBQVEsQ0FBQyxVQUFELENBQWYsRUFBNkIsSUFBN0IsQ0FBVjtBQUNELENBWkQ7O0FBY0EsTUFBTUUsSUFBSSxHQUFHLENBQUM7QUFDWmxCLEVBQUFBLFdBRFk7QUFFWmdCLEVBQUFBO0FBRlksQ0FBRCxLQU1EO0FBQ1ZqQixFQUFBQSxVQUFVLENBQUNDLFdBQUQsQ0FBVjtBQUNBZSxFQUFBQSxXQUFXLENBQUNDLFFBQUQsQ0FBWDtBQUNELENBVEQ7O0FBV0EsTUFBTUcsSUFBSSxHQUFHLE1BQVk7QUFDdkIsTUFBSXJCLGtCQUFrQixLQUFLRixXQUEzQixFQUF3QztBQUN0QztBQUNEOztBQUVELE1BQUksQ0FBQ0ssTUFBTSxDQUFDQyxRQUFaLEVBQXNCO0FBQ3BCSixJQUFBQSxrQkFBa0IsSUFBSSxDQUF0QjtBQUNBbUIsSUFBQUEsVUFBVSxDQUFDRSxJQUFELEVBQU8sSUFBUCxDQUFWLENBRm9CLENBRUc7O0FBQ3ZCO0FBQ0Q7O0FBRURsQixFQUFBQSxNQUFNLENBQUNDLFFBQVAsQ0FBZ0JrQixpQkFBaEI7QUFDRCxDQVpEOztBQWNBLE1BQU1DLEtBQUssR0FBRyxNQUFZcEIsTUFBTSxDQUFDQyxRQUFQLElBQW1CRCxNQUFNLENBQUNDLFFBQVAsQ0FBZ0JvQixnQkFBaEIsRUFBN0M7O2VBRWU7QUFDYjNCLEVBQUFBLE1BRGE7QUFFYnVCLEVBQUFBLElBRmE7QUFHYkMsRUFBQUEsSUFIYTtBQUliRSxFQUFBQTtBQUphLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdGF0ZSB9IGZyb20gJ3R5cGVzJ1xuXG5jb25zdCBkb21haW4gPSAnaHR0cHM6Ly91c2VybGlrZS1jZG4td2lkZ2V0cy5zMy1ldS13ZXN0LTEuYW1hem9uYXdzLmNvbSdcbmNvbnN0IG1heEF0dGVtcHRzID0gMTBcbmxldCBjdXJyZW50TG9hZEF0dGVtcHQgPSAwXG5sZXQgY3VycmVudE9wZW5BdHRlbXB0ID0gMFxuXG5kZWNsYXJlIGdsb2JhbCB7XG4gIGludGVyZmFjZSBXaW5kb3cge1xuICAgIC8vZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICB1c2VybGlrZToge1xuICAgICAgdXNlcmxpa2VTdGFydENoYXQ6ICgpID0+IHZvaWRcbiAgICAgIHVzZXJsaWtlUXVpdENoYXQ6ICgpID0+IHZvaWRcbiAgICB9XG4gIH1cbn1cblxuLyogZXNsaW50LWRpc2FibGUgKi9cbmNvbnN0IGxvYWRTY3JpcHQgPSAocHJvdmlkZXJLZXk6IHN0cmluZykgPT4ge1xuICBpZiAod2luZG93LnVzZXJsaWtlKSByZXR1cm5cblxuICB2YXIgZCA9IGRvY3VtZW50XG4gIGZ1bmN0aW9uIGwoKSB7XG4gICAgdmFyIHMgPSBkLmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpXG4gICAgcy50eXBlID0gJ3RleHQvamF2YXNjcmlwdCdcbiAgICBzLmFzeW5jID0gdHJ1ZVxuICAgIHMuc3JjID0gYCR7ZG9tYWlufS8ke3Byb3ZpZGVyS2V5fS5qc2BcbiAgICB2YXIgeCA9IGQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3NjcmlwdCcpWzBdXG4gICAgeC5wYXJlbnROb2RlPy5pbnNlcnRCZWZvcmUocywgeClcbiAgfVxuICBsKClcbn1cbi8qIGVzbGludC1lbmFibGUgKi9cblxuY29uc3QgYXR0ZW1wdExvYWQgPSAoc2V0U3RhdGU6IChzdGF0ZTogU3RhdGUpID0+IHZvaWQpID0+IHtcbiAgaWYgKGN1cnJlbnRMb2FkQXR0ZW1wdCA9PT0gbWF4QXR0ZW1wdHMpIHtcbiAgICByZXR1cm5cbiAgfVxuXG4gIGlmICghd2luZG93LnVzZXJsaWtlKSB7XG4gICAgY3VycmVudExvYWRBdHRlbXB0ICs9IDFcbiAgICBzZXRUaW1lb3V0KCgpID0+IGF0dGVtcHRMb2FkKHNldFN0YXRlKSwgMTAwMCkgLy8gVHJ5IGV2ZXJ5IHNlY29uZFxuICAgIHJldHVyblxuICB9XG5cbiAgc2V0VGltZW91dCgoKSA9PiBzZXRTdGF0ZSgnY29tcGxldGUnKSwgMjAwMClcbn1cblxuY29uc3QgbG9hZCA9ICh7XG4gIHByb3ZpZGVyS2V5LFxuICBzZXRTdGF0ZVxufToge1xuICBwcm92aWRlcktleTogc3RyaW5nXG4gIHNldFN0YXRlOiAoc3RhdGU6IFN0YXRlKSA9PiB2b2lkXG59KTogdm9pZCA9PiB7XG4gIGxvYWRTY3JpcHQocHJvdmlkZXJLZXkpXG4gIGF0dGVtcHRMb2FkKHNldFN0YXRlKVxufVxuXG5jb25zdCBvcGVuID0gKCk6IHZvaWQgPT4ge1xuICBpZiAoY3VycmVudE9wZW5BdHRlbXB0ID09PSBtYXhBdHRlbXB0cykge1xuICAgIHJldHVyblxuICB9XG5cbiAgaWYgKCF3aW5kb3cudXNlcmxpa2UpIHtcbiAgICBjdXJyZW50T3BlbkF0dGVtcHQgKz0gMVxuICAgIHNldFRpbWVvdXQob3BlbiwgMTAwMCkgLy8gVHJ5IGV2ZXJ5IHNlY29uZFxuICAgIHJldHVyblxuICB9XG5cbiAgd2luZG93LnVzZXJsaWtlLnVzZXJsaWtlU3RhcnRDaGF0KClcbn1cblxuY29uc3QgY2xvc2UgPSAoKTogdm9pZCA9PiB3aW5kb3cudXNlcmxpa2UgJiYgd2luZG93LnVzZXJsaWtlLnVzZXJsaWtlUXVpdENoYXQoKVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGRvbWFpbixcbiAgbG9hZCxcbiAgb3BlbixcbiAgY2xvc2Vcbn1cbiJdfQ==