"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
const domain = 'https://widget.intercom.io';

/* eslint-disable */
const loadScript = () => {
  if (window.Intercom) return;

  (function () {
    var w = window;
    var ic = w.Intercom;

    if (typeof ic === 'function') {
      ic('reattach_activator'); //eslint-disable-next-line no-undef

      ic('update', window.intercomSettings);
    } else {
      var d = document;

      var i = function () {
        i.c(arguments);
      };

      i.q = [];

      i.c = function (args) {
        i.q.push(args);
      };

      w.Intercom = i; //eslint-disable-next-line no-inner-declarations

      const l = () => {
        var _x$parentNode;

        var s = d.createElement('script');
        s.type = 'text/javascript';
        s.async = true;
        s.src = `${domain}/widget/3qmk5gyg`;
        var x = d.getElementsByTagName('script')[0];
        (_x$parentNode = x.parentNode) === null || _x$parentNode === void 0 ? void 0 : _x$parentNode.insertBefore(s, x);
      };

      l();
    }
  })();
};
/* eslint:enable */


const load = ({
  providerKey,
  setState
}) => {
  loadScript();
  window.Intercom('boot', {
    app_id: providerKey
  });
  setTimeout(() => setState('complete'), 2000);
};

const open = () => window.Intercom('show');

const close = () => window.Intercom('close');

var _default = {
  domain,
  load,
  open,
  close
};
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wcm92aWRlcnMvaW50ZXJjb20udHMiXSwibmFtZXMiOlsiZG9tYWluIiwibG9hZFNjcmlwdCIsIndpbmRvdyIsIkludGVyY29tIiwidyIsImljIiwiaW50ZXJjb21TZXR0aW5ncyIsImQiLCJkb2N1bWVudCIsImkiLCJjIiwiYXJndW1lbnRzIiwicSIsImFyZ3MiLCJwdXNoIiwibCIsInMiLCJjcmVhdGVFbGVtZW50IiwidHlwZSIsImFzeW5jIiwic3JjIiwieCIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwicGFyZW50Tm9kZSIsImluc2VydEJlZm9yZSIsImxvYWQiLCJwcm92aWRlcktleSIsInNldFN0YXRlIiwiYXBwX2lkIiwic2V0VGltZW91dCIsIm9wZW4iLCJjbG9zZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRUEsTUFBTUEsTUFBTSxHQUFHLDRCQUFmOztBQVVBO0FBQ0EsTUFBTUMsVUFBVSxHQUFHLE1BQU07QUFDdkIsTUFBSUMsTUFBTSxDQUFDQyxRQUFYLEVBQXFCOztBQUNwQixHQUFDLFlBQVc7QUFDWCxRQUFJQyxDQUFDLEdBQUdGLE1BQVI7QUFDQSxRQUFJRyxFQUFFLEdBQUdELENBQUMsQ0FBQ0QsUUFBWDs7QUFDQSxRQUFJLE9BQU9FLEVBQVAsS0FBYyxVQUFsQixFQUE4QjtBQUM1QkEsTUFBQUEsRUFBRSxDQUFDLG9CQUFELENBQUYsQ0FENEIsQ0FFNUI7O0FBQ0FBLE1BQUFBLEVBQUUsQ0FBQyxRQUFELEVBQVdILE1BQU0sQ0FBQ0ksZ0JBQWxCLENBQUY7QUFDRCxLQUpELE1BSU87QUFDTCxVQUFJQyxDQUFDLEdBQUdDLFFBQVI7O0FBQ0EsVUFBSUMsQ0FBTSxHQUFHLFlBQVc7QUFDdEJBLFFBQUFBLENBQUMsQ0FBQ0MsQ0FBRixDQUFJQyxTQUFKO0FBQ0QsT0FGRDs7QUFHQUYsTUFBQUEsQ0FBQyxDQUFDRyxDQUFGLEdBQU0sRUFBTjs7QUFDQUgsTUFBQUEsQ0FBQyxDQUFDQyxDQUFGLEdBQU0sVUFBU0csSUFBVCxFQUFvQjtBQUN4QkosUUFBQUEsQ0FBQyxDQUFDRyxDQUFGLENBQUlFLElBQUosQ0FBU0QsSUFBVDtBQUNELE9BRkQ7O0FBR0FULE1BQUFBLENBQUMsQ0FBQ0QsUUFBRixHQUFhTSxDQUFiLENBVEssQ0FVTDs7QUFDQSxZQUFNTSxDQUFDLEdBQUcsTUFBTTtBQUFBOztBQUNkLFlBQUlDLENBQUMsR0FBR1QsQ0FBQyxDQUFDVSxhQUFGLENBQWdCLFFBQWhCLENBQVI7QUFDQUQsUUFBQUEsQ0FBQyxDQUFDRSxJQUFGLEdBQVMsaUJBQVQ7QUFDQUYsUUFBQUEsQ0FBQyxDQUFDRyxLQUFGLEdBQVUsSUFBVjtBQUNBSCxRQUFBQSxDQUFDLENBQUNJLEdBQUYsR0FBUyxHQUFFcEIsTUFBTyxrQkFBbEI7QUFDQSxZQUFJcUIsQ0FBQyxHQUFHZCxDQUFDLENBQUNlLG9CQUFGLENBQXVCLFFBQXZCLEVBQWlDLENBQWpDLENBQVI7QUFDQSx5QkFBQUQsQ0FBQyxDQUFDRSxVQUFGLGdFQUFjQyxZQUFkLENBQTJCUixDQUEzQixFQUE4QkssQ0FBOUI7QUFDRCxPQVBEOztBQVFBTixNQUFBQSxDQUFDO0FBQ0Y7QUFDRixHQTVCQTtBQTZCRixDQS9CRDtBQWdDQTs7O0FBRUEsTUFBTVUsSUFBSSxHQUFHLENBQUM7QUFDWkMsRUFBQUEsV0FEWTtBQUVaQyxFQUFBQTtBQUZZLENBQUQsS0FNUDtBQUNKMUIsRUFBQUEsVUFBVTtBQUNWQyxFQUFBQSxNQUFNLENBQUNDLFFBQVAsQ0FBZ0IsTUFBaEIsRUFBd0I7QUFBRXlCLElBQUFBLE1BQU0sRUFBRUY7QUFBVixHQUF4QjtBQUNBRyxFQUFBQSxVQUFVLENBQUMsTUFBTUYsUUFBUSxDQUFDLFVBQUQsQ0FBZixFQUE2QixJQUE3QixDQUFWO0FBQ0QsQ0FWRDs7QUFZQSxNQUFNRyxJQUFJLEdBQUcsTUFBTTVCLE1BQU0sQ0FBQ0MsUUFBUCxDQUFnQixNQUFoQixDQUFuQjs7QUFFQSxNQUFNNEIsS0FBSyxHQUFHLE1BQU03QixNQUFNLENBQUNDLFFBQVAsQ0FBZ0IsT0FBaEIsQ0FBcEI7O2VBRWU7QUFDYkgsRUFBQUEsTUFEYTtBQUVieUIsRUFBQUEsSUFGYTtBQUdiSyxFQUFBQSxJQUhhO0FBSWJDLEVBQUFBO0FBSmEsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN0YXRlIH0gZnJvbSAndHlwZXMnXG5cbmNvbnN0IGRvbWFpbiA9ICdodHRwczovL3dpZGdldC5pbnRlcmNvbS5pbydcblxuZGVjbGFyZSBnbG9iYWwge1xuICBpbnRlcmZhY2UgV2luZG93IHtcbiAgICAvL2VzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gICAgSW50ZXJjb206IGFueVxuICAgIGludGVyY29tU2V0dGluZ3M6ICgpID0+IHZvaWRcbiAgfVxufVxuXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuY29uc3QgbG9hZFNjcmlwdCA9ICgpID0+IHtcbiAgaWYgKHdpbmRvdy5JbnRlcmNvbSkgcmV0dXJuXG4gIDsoZnVuY3Rpb24oKSB7XG4gICAgdmFyIHcgPSB3aW5kb3dcbiAgICB2YXIgaWMgPSB3LkludGVyY29tXG4gICAgaWYgKHR5cGVvZiBpYyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgaWMoJ3JlYXR0YWNoX2FjdGl2YXRvcicpXG4gICAgICAvL2VzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICAgICAgaWMoJ3VwZGF0ZScsIHdpbmRvdy5pbnRlcmNvbVNldHRpbmdzKVxuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgZCA9IGRvY3VtZW50XG4gICAgICB2YXIgaTogYW55ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGkuYyhhcmd1bWVudHMpXG4gICAgICB9XG4gICAgICBpLnEgPSBbXVxuICAgICAgaS5jID0gZnVuY3Rpb24oYXJnczogYW55KSB7XG4gICAgICAgIGkucS5wdXNoKGFyZ3MpXG4gICAgICB9XG4gICAgICB3LkludGVyY29tID0gaVxuICAgICAgLy9lc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8taW5uZXItZGVjbGFyYXRpb25zXG4gICAgICBjb25zdCBsID0gKCkgPT4ge1xuICAgICAgICB2YXIgcyA9IGQuY3JlYXRlRWxlbWVudCgnc2NyaXB0JylcbiAgICAgICAgcy50eXBlID0gJ3RleHQvamF2YXNjcmlwdCdcbiAgICAgICAgcy5hc3luYyA9IHRydWVcbiAgICAgICAgcy5zcmMgPSBgJHtkb21haW59L3dpZGdldC8zcW1rNWd5Z2BcbiAgICAgICAgdmFyIHggPSBkLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdzY3JpcHQnKVswXVxuICAgICAgICB4LnBhcmVudE5vZGU/Lmluc2VydEJlZm9yZShzLCB4KVxuICAgICAgfVxuICAgICAgbCgpXG4gICAgfVxuICB9KSgpXG59XG4vKiBlc2xpbnQ6ZW5hYmxlICovXG5cbmNvbnN0IGxvYWQgPSAoe1xuICBwcm92aWRlcktleSxcbiAgc2V0U3RhdGVcbn06IHtcbiAgcHJvdmlkZXJLZXk6IHN0cmluZ1xuICBzZXRTdGF0ZTogKHN0YXRlOiBTdGF0ZSkgPT4gdm9pZFxufSkgPT4ge1xuICBsb2FkU2NyaXB0KClcbiAgd2luZG93LkludGVyY29tKCdib290JywgeyBhcHBfaWQ6IHByb3ZpZGVyS2V5IH0pXG4gIHNldFRpbWVvdXQoKCkgPT4gc2V0U3RhdGUoJ2NvbXBsZXRlJyksIDIwMDApXG59XG5cbmNvbnN0IG9wZW4gPSAoKSA9PiB3aW5kb3cuSW50ZXJjb20oJ3Nob3cnKVxuXG5jb25zdCBjbG9zZSA9ICgpID0+IHdpbmRvdy5JbnRlcmNvbSgnY2xvc2UnKVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGRvbWFpbixcbiAgbG9hZCxcbiAgb3BlbixcbiAgY2xvc2Vcbn1cbiJdfQ==