"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.LiveChatLoaderProvider = void 0;

var _react = _interopRequireWildcard(require("react"));

var Providers = _interopRequireWildcard(require("../providers"));

var _context = require("../context");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

const LiveChatLoaderProvider = (_ref) => {
  let {
    provider,
    children,
    idlePeriod = 5000
  } = _ref,
      props = _objectWithoutProperties(_ref, ["provider", "children", "idlePeriod"]);

  const [state, setState] = (0, _react.useState)('initial');

  const value = _objectSpread({
    provider,
    idlePeriod,
    state,
    setState
  }, props);

  const chatProvider = Providers[provider];

  if (!chatProvider) {
    //eslint-disable-next-line no-console
    console.error(`Unkown provider given to react-live-chat-loader: ${provider}`);
    return null;
  }

  return /*#__PURE__*/_react.default.createElement(_context.LiveChatLoaderContext.Provider, {
    value: value
  }, /*#__PURE__*/_react.default.createElement("link", {
    href: chatProvider.domain,
    rel: "preconnect",
    crossOrigin: ""
  }), children);
};

exports.LiveChatLoaderProvider = LiveChatLoaderProvider;
var _default = LiveChatLoaderProvider;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21wb25lbnRzL0xpdmVDaGF0TG9hZGVyUHJvdmlkZXIudHN4Il0sIm5hbWVzIjpbIkxpdmVDaGF0TG9hZGVyUHJvdmlkZXIiLCJwcm92aWRlciIsImNoaWxkcmVuIiwiaWRsZVBlcmlvZCIsInByb3BzIiwic3RhdGUiLCJzZXRTdGF0ZSIsInZhbHVlIiwiY2hhdFByb3ZpZGVyIiwiUHJvdmlkZXJzIiwiY29uc29sZSIsImVycm9yIiwiZG9tYWluIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFTyxNQUFNQSxzQkFBc0IsR0FBRyxVQVdaO0FBQUEsTUFYYTtBQUNyQ0MsSUFBQUEsUUFEcUM7QUFFckNDLElBQUFBLFFBRnFDO0FBR3JDQyxJQUFBQSxVQUFVLEdBQUc7QUFId0IsR0FXYjtBQUFBLE1BUHJCQyxLQU9xQjs7QUFDeEIsUUFBTSxDQUFDQyxLQUFELEVBQVFDLFFBQVIsSUFBb0IscUJBQWdCLFNBQWhCLENBQTFCOztBQUNBLFFBQU1DLEtBQUs7QUFDVE4sSUFBQUEsUUFEUztBQUVURSxJQUFBQSxVQUZTO0FBR1RFLElBQUFBLEtBSFM7QUFJVEMsSUFBQUE7QUFKUyxLQUtORixLQUxNLENBQVg7O0FBUUEsUUFBTUksWUFBWSxHQUFHQyxTQUFTLENBQUNSLFFBQUQsQ0FBOUI7O0FBRUEsTUFBSSxDQUFDTyxZQUFMLEVBQW1CO0FBQ2pCO0FBQ0FFLElBQUFBLE9BQU8sQ0FBQ0MsS0FBUixDQUNHLG9EQUFtRFYsUUFBUyxFQUQvRDtBQUdBLFdBQU8sSUFBUDtBQUNEOztBQUVELHNCQUNFLDZCQUFDLDhCQUFELENBQXVCLFFBQXZCO0FBQWdDLElBQUEsS0FBSyxFQUFFTTtBQUF2QyxrQkFDRTtBQUFNLElBQUEsSUFBSSxFQUFFQyxZQUFZLENBQUNJLE1BQXpCO0FBQWlDLElBQUEsR0FBRyxFQUFDLFlBQXJDO0FBQWtELElBQUEsV0FBVyxFQUFDO0FBQTlELElBREYsRUFFR1YsUUFGSCxDQURGO0FBTUQsQ0FyQ007OztlQXVDUUYsc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCdcbmltcG9ydCAqIGFzIFByb3ZpZGVycyBmcm9tICdwcm92aWRlcnMnXG5pbXBvcnQgeyBTdGF0ZSwgUHJvdmlkZXIgfSBmcm9tICd0eXBlcydcbmltcG9ydCB7IExpdmVDaGF0TG9hZGVyQ29udGV4dCB9IGZyb20gJ2NvbnRleHQnXG5cbmV4cG9ydCBjb25zdCBMaXZlQ2hhdExvYWRlclByb3ZpZGVyID0gKHtcbiAgcHJvdmlkZXIsXG4gIGNoaWxkcmVuLFxuICBpZGxlUGVyaW9kID0gNTAwMCxcbiAgLi4ucHJvcHNcbn06IHtcbiAgcHJvdmlkZXI6IFByb3ZpZGVyXG4gIGNoaWxkcmVuOiBKU1guRWxlbWVudFxuICBpZGxlUGVyaW9kPzogbnVtYmVyXG4gIHByb3ZpZGVyS2V5OiBzdHJpbmdcbiAgYXBwSUQ/OiBzdHJpbmdcbn0pOiBKU1guRWxlbWVudCB8IG51bGwgPT4ge1xuICBjb25zdCBbc3RhdGUsIHNldFN0YXRlXSA9IHVzZVN0YXRlPFN0YXRlPignaW5pdGlhbCcpXG4gIGNvbnN0IHZhbHVlID0ge1xuICAgIHByb3ZpZGVyLFxuICAgIGlkbGVQZXJpb2QsXG4gICAgc3RhdGUsXG4gICAgc2V0U3RhdGUsXG4gICAgLi4ucHJvcHNcbiAgfVxuXG4gIGNvbnN0IGNoYXRQcm92aWRlciA9IFByb3ZpZGVyc1twcm92aWRlcl1cblxuICBpZiAoIWNoYXRQcm92aWRlcikge1xuICAgIC8vZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICBjb25zb2xlLmVycm9yKFxuICAgICAgYFVua293biBwcm92aWRlciBnaXZlbiB0byByZWFjdC1saXZlLWNoYXQtbG9hZGVyOiAke3Byb3ZpZGVyfWBcbiAgICApXG4gICAgcmV0dXJuIG51bGxcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPExpdmVDaGF0TG9hZGVyQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17dmFsdWV9PlxuICAgICAgPGxpbmsgaHJlZj17Y2hhdFByb3ZpZGVyLmRvbWFpbn0gcmVsPVwicHJlY29ubmVjdFwiIGNyb3NzT3JpZ2luPVwiXCIgLz5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L0xpdmVDaGF0TG9hZGVyQ29udGV4dC5Qcm92aWRlcj5cbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBMaXZlQ2hhdExvYWRlclByb3ZpZGVyXG4iXX0=