const domain = 'https://beacon-v2.helpscout.net';

/* eslint:disable */
const loadScript = () => {
  if (window.Beacon) return;

  (function (e, t, n) {
    function a() {
      var _e$parentNode;

      const e = t.getElementsByTagName('script')[0],
            n = t.createElement('script');
      n.async = !0, n.src = domain, (_e$parentNode = e.parentNode) === null || _e$parentNode === void 0 ? void 0 : _e$parentNode.insertBefore(n, e);
    }

    if ( //eslint-disable-next-line @typescript-eslint/no-explicit-any
    e.Beacon = n = function (t, n, a) {
      e.Beacon.readyQueue.push({
        method: t,
        options: n,
        data: a
      });
    }, n.readyQueue = [], 'complete' === t.readyState) return a();
    e.attachEvent ? e.attachEvent('onload', a) : e.addEventListener('load', a, !1); //eslint-disable-next-line @typescript-eslint/no-empty-function
  })(window, document, window.Beacon || function () {});
};
/* eslint:enable */


const load = ({
  providerKey,
  setState
}) => {
  loadScript();
  window.Beacon('init', providerKey);
  setTimeout(() => setState('complete'), 2000);
};

const open = () => window.Beacon('open');

const close = () => window.Beacon('close');

export default {
  domain,
  load,
  open,
  close
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wcm92aWRlcnMvaGVscFNjb3V0LnRzIl0sIm5hbWVzIjpbImRvbWFpbiIsImxvYWRTY3JpcHQiLCJ3aW5kb3ciLCJCZWFjb24iLCJlIiwidCIsIm4iLCJhIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJjcmVhdGVFbGVtZW50IiwiYXN5bmMiLCJzcmMiLCJwYXJlbnROb2RlIiwiaW5zZXJ0QmVmb3JlIiwicmVhZHlRdWV1ZSIsInB1c2giLCJtZXRob2QiLCJvcHRpb25zIiwiZGF0YSIsInJlYWR5U3RhdGUiLCJhdHRhY2hFdmVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJkb2N1bWVudCIsImxvYWQiLCJwcm92aWRlcktleSIsInNldFN0YXRlIiwic2V0VGltZW91dCIsIm9wZW4iLCJjbG9zZSJdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTUEsTUFBTSxHQUFHLGlDQUFmOztBQVdBO0FBQ0EsTUFBTUMsVUFBVSxHQUFHLE1BQU07QUFDdkIsTUFBSUMsTUFBTSxDQUFDQyxNQUFYLEVBQW1COztBQUNsQixHQUFDLFVBQVNDLENBQVQsRUFBWUMsQ0FBWixFQUFlQyxDQUFmLEVBQWtCO0FBQ2xCLGFBQVNDLENBQVQsR0FBYTtBQUFBOztBQUNYLFlBQU1ILENBQUMsR0FBR0MsQ0FBQyxDQUFDRyxvQkFBRixDQUF1QixRQUF2QixFQUFpQyxDQUFqQyxDQUFWO0FBQUEsWUFDRUYsQ0FBQyxHQUFHRCxDQUFDLENBQUNJLGFBQUYsQ0FBZ0IsUUFBaEIsQ0FETjtBQUVFSCxNQUFBQSxDQUFDLENBQUNJLEtBQUYsR0FBVSxDQUFDLENBQVosRUFBaUJKLENBQUMsQ0FBQ0ssR0FBRixHQUFRWCxNQUF6QixtQkFBa0NJLENBQUMsQ0FBQ1EsVUFBcEMsa0RBQWtDLGNBQWNDLFlBQWQsQ0FBMkJQLENBQTNCLEVBQThCRixDQUE5QixDQUFsQztBQUNGOztBQUNELFNBQ0U7QUFDRUEsSUFBQUEsQ0FBQyxDQUFDRCxNQUFGLEdBQVdHLENBQUMsR0FBRyxVQUFTRCxDQUFULEVBQWlCQyxDQUFqQixFQUF5QkMsQ0FBekIsRUFBaUM7QUFDaERILE1BQUFBLENBQUMsQ0FBQ0QsTUFBRixDQUFTVyxVQUFULENBQW9CQyxJQUFwQixDQUF5QjtBQUFFQyxRQUFBQSxNQUFNLEVBQUVYLENBQVY7QUFBYVksUUFBQUEsT0FBTyxFQUFFWCxDQUF0QjtBQUF5QlksUUFBQUEsSUFBSSxFQUFFWDtBQUEvQixPQUF6QjtBQUNELEtBRkEsRUFHQUQsQ0FBQyxDQUFDUSxVQUFGLEdBQWUsRUFIZixFQUlELGVBQWVULENBQUMsQ0FBQ2MsVUFObkIsRUFRRSxPQUFPWixDQUFDLEVBQVI7QUFDRkgsSUFBQUEsQ0FBQyxDQUFDZ0IsV0FBRixHQUNJaEIsQ0FBQyxDQUFDZ0IsV0FBRixDQUFjLFFBQWQsRUFBd0JiLENBQXhCLENBREosR0FFSUgsQ0FBQyxDQUFDaUIsZ0JBQUYsQ0FBbUIsTUFBbkIsRUFBMkJkLENBQTNCLEVBQThCLENBQUMsQ0FBL0IsQ0FGSixDQWZrQixDQWtCbEI7QUFDRCxHQW5CQSxFQW1CRUwsTUFuQkYsRUFtQlVvQixRQW5CVixFQW1Cb0JwQixNQUFNLENBQUNDLE1BQVAsSUFBaUIsWUFBVyxDQUFFLENBbkJsRDtBQW9CRixDQXRCRDtBQXVCQTs7O0FBRUEsTUFBTW9CLElBQUksR0FBRyxDQUFDO0FBQ1pDLEVBQUFBLFdBRFk7QUFFWkMsRUFBQUE7QUFGWSxDQUFELEtBTUQ7QUFDVnhCLEVBQUFBLFVBQVU7QUFDVkMsRUFBQUEsTUFBTSxDQUFDQyxNQUFQLENBQWMsTUFBZCxFQUFzQnFCLFdBQXRCO0FBQ0FFLEVBQUFBLFVBQVUsQ0FBQyxNQUFNRCxRQUFRLENBQUMsVUFBRCxDQUFmLEVBQTZCLElBQTdCLENBQVY7QUFDRCxDQVZEOztBQVlBLE1BQU1FLElBQUksR0FBRyxNQUFZekIsTUFBTSxDQUFDQyxNQUFQLENBQWMsTUFBZCxDQUF6Qjs7QUFDQSxNQUFNeUIsS0FBSyxHQUFHLE1BQVkxQixNQUFNLENBQUNDLE1BQVAsQ0FBYyxPQUFkLENBQTFCOztBQUVBLGVBQWU7QUFDYkgsRUFBQUEsTUFEYTtBQUVidUIsRUFBQUEsSUFGYTtBQUdiSSxFQUFBQSxJQUhhO0FBSWJDLEVBQUFBO0FBSmEsQ0FBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN0YXRlIH0gZnJvbSAndHlwZXMnXG5cbmNvbnN0IGRvbWFpbiA9ICdodHRwczovL2JlYWNvbi12Mi5oZWxwc2NvdXQubmV0J1xuXG5kZWNsYXJlIGdsb2JhbCB7XG4gIGludGVyZmFjZSBXaW5kb3cge1xuICAgIC8vZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICBCZWFjb246IGFueVxuICAgIC8vZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICBhdHRhY2hFdmVudDogYW55XG4gIH1cbn1cblxuLyogZXNsaW50OmRpc2FibGUgKi9cbmNvbnN0IGxvYWRTY3JpcHQgPSAoKSA9PiB7XG4gIGlmICh3aW5kb3cuQmVhY29uKSByZXR1cm5cbiAgOyhmdW5jdGlvbihlLCB0LCBuKSB7XG4gICAgZnVuY3Rpb24gYSgpIHtcbiAgICAgIGNvbnN0IGUgPSB0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdzY3JpcHQnKVswXSxcbiAgICAgICAgbiA9IHQuY3JlYXRlRWxlbWVudCgnc2NyaXB0JylcbiAgICAgIDsobi5hc3luYyA9ICEwKSwgKG4uc3JjID0gZG9tYWluKSwgZS5wYXJlbnROb2RlPy5pbnNlcnRCZWZvcmUobiwgZSlcbiAgICB9XG4gICAgaWYgKFxuICAgICAgLy9lc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgICAgKChlLkJlYWNvbiA9IG4gPSBmdW5jdGlvbih0OiBhbnksIG46IGFueSwgYTogYW55KSB7XG4gICAgICAgIGUuQmVhY29uLnJlYWR5UXVldWUucHVzaCh7IG1ldGhvZDogdCwgb3B0aW9uczogbiwgZGF0YTogYSB9KVxuICAgICAgfSksXG4gICAgICAobi5yZWFkeVF1ZXVlID0gW10pLFxuICAgICAgJ2NvbXBsZXRlJyA9PT0gdC5yZWFkeVN0YXRlKVxuICAgIClcbiAgICAgIHJldHVybiBhKClcbiAgICBlLmF0dGFjaEV2ZW50XG4gICAgICA/IGUuYXR0YWNoRXZlbnQoJ29ubG9hZCcsIGEpXG4gICAgICA6IGUuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGEsICExKVxuICAgIC8vZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1mdW5jdGlvblxuICB9KSh3aW5kb3csIGRvY3VtZW50LCB3aW5kb3cuQmVhY29uIHx8IGZ1bmN0aW9uKCkge30pXG59XG4vKiBlc2xpbnQ6ZW5hYmxlICovXG5cbmNvbnN0IGxvYWQgPSAoe1xuICBwcm92aWRlcktleSxcbiAgc2V0U3RhdGVcbn06IHtcbiAgcHJvdmlkZXJLZXk6IHN0cmluZ1xuICBzZXRTdGF0ZTogKHN0YXRlOiBTdGF0ZSkgPT4gdm9pZFxufSk6IHZvaWQgPT4ge1xuICBsb2FkU2NyaXB0KClcbiAgd2luZG93LkJlYWNvbignaW5pdCcsIHByb3ZpZGVyS2V5KVxuICBzZXRUaW1lb3V0KCgpID0+IHNldFN0YXRlKCdjb21wbGV0ZScpLCAyMDAwKVxufVxuXG5jb25zdCBvcGVuID0gKCk6IHZvaWQgPT4gd2luZG93LkJlYWNvbignb3BlbicpXG5jb25zdCBjbG9zZSA9ICgpOiB2b2lkID0+IHdpbmRvdy5CZWFjb24oJ2Nsb3NlJylcblxuZXhwb3J0IGRlZmF1bHQge1xuICBkb21haW4sXG4gIGxvYWQsXG4gIG9wZW4sXG4gIGNsb3NlXG59XG4iXX0=