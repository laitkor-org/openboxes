{"remainingRequest":"/opt/MTOBS-BIKASH/node_modules/babel-loader/lib/index.js?presets[]=@babel/react&presets[]=@babel/env!/opt/MTOBS-BIKASH/node_modules/eslint-loader/dist/cjs.js!/opt/MTOBS-BIKASH/src/js/consts/dataFormat/colorMapping.jsx","dependencies":[{"path":"/opt/MTOBS-BIKASH/src/js/consts/dataFormat/colorMapping.jsx","mtime":1698037751000},{"path":"/opt/MTOBS-BIKASH/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/MTOBS-BIKASH/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/opt/MTOBS-BIKASH/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7IHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH0KZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC4iKTsgfQpmdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7IGlmICghbykgcmV0dXJuOyBpZiAodHlwZW9mIG8gPT09ICJzdHJpbmciKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpOyBpZiAobiA9PT0gIk9iamVjdCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTsgaWYgKG4gPT09ICJNYXAiIHx8IG4gPT09ICJTZXQiKSByZXR1cm4gQXJyYXkuZnJvbShvKTsgaWYgKG4gPT09ICJBcmd1bWVudHMiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgfQpmdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikgeyBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH0KZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgeyB2YXIgX2kgPSBudWxsID09IGFyciA/IG51bGwgOiAidW5kZWZpbmVkIiAhPSB0eXBlb2YgU3ltYm9sICYmIGFycltTeW1ib2wuaXRlcmF0b3JdIHx8IGFyclsiQEBpdGVyYXRvciJdOyBpZiAobnVsbCAhPSBfaSkgeyB2YXIgX3MsIF9lLCBfeCwgX3IsIF9hcnIgPSBbXSwgX24gPSAhMCwgX2QgPSAhMTsgdHJ5IHsgaWYgKF94ID0gKF9pID0gX2kuY2FsbChhcnIpKS5uZXh0LCAwID09PSBpKSB7IGlmIChPYmplY3QoX2kpICE9PSBfaSkgcmV0dXJuOyBfbiA9ICExOyB9IGVsc2UgZm9yICg7ICEoX24gPSAoX3MgPSBfeC5jYWxsKF9pKSkuZG9uZSkgJiYgKF9hcnIucHVzaChfcy52YWx1ZSksIF9hcnIubGVuZ3RoICE9PSBpKTsgX24gPSAhMCkgeyA7IH0gfSBjYXRjaCAoZXJyKSB7IF9kID0gITAsIF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIG51bGwgIT0gX2lbInJldHVybiJdICYmIChfciA9IF9pWyJyZXR1cm4iXSgpLCBPYmplY3QoX3IpICE9PSBfcikpIHJldHVybjsgfSBmaW5hbGx5IHsgaWYgKF9kKSB0aHJvdyBfZTsgfSB9IHJldHVybiBfYXJyOyB9IH0KZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9CmltcG9ydCBDb2xvclBhbGV0dGUgZnJvbSAnY29tcG9uZW50cy9kYXNoYm9hcmQvQ29sb3JQYWxldHRlLnNjc3MnOwoKLyogZ2xvYmFsIF8gKi8KCmZ1bmN0aW9uIGZvcm1hdENvbG9yUGFsZXR0ZShjb2xvclBhbGV0dGUpIHsKICB2YXIgZm9ybWF0dGVkUGFsZXR0ZSA9IHsKICAgIHN0YXRlOiB7CiAgICAgICJkZWZhdWx0IjogW10sCiAgICAgIGRhcms6IFtdLAogICAgICBsaWdodDogW10KICAgIH0sCiAgICBneXI6IHsKICAgICAgLy8gWyBzdWNjZXNzLCB3YXJuaW5nLCBlcnJvciBdCiAgICAgICJkZWZhdWx0IjogW10sCiAgICAgIGRhcms6IFtdLAogICAgICBsaWdodDogW10KICAgIH0sCiAgICAiZGVmYXVsdCI6IG51bGwKICB9OwogIE9iamVjdC5lbnRyaWVzKGNvbG9yUGFsZXR0ZSkuZm9yRWFjaChmdW5jdGlvbiAoX3JlZikgewogICAgdmFyIF9yZWYyID0gX3NsaWNlZFRvQXJyYXkoX3JlZiwgMiksCiAgICAgIGtleSA9IF9yZWYyWzBdLAogICAgICB2YWx1ZSA9IF9yZWYyWzFdOwogICAgdmFyIHN0YXRlTWF0Y2ggPSBrZXkubWF0Y2goL14obGlnaHR8ZGFyayk/W3NTXXRhdGVbMC05XSskLyk7CiAgICB2YXIgZ3lyTWF0Y2ggPSBrZXkubWF0Y2goL14obGlnaHR8ZGFyayk/KFtzU111Y2Nlc3N8W3dXXWFybmluZ3xbZUVdcnJvcikkLyk7CiAgICBpZiAoc3RhdGVNYXRjaCkgewogICAgICBmb3JtYXR0ZWRQYWxldHRlLnN0YXRlW3N0YXRlTWF0Y2hbMV0gfHwgJ2RlZmF1bHQnXS5wdXNoKHZhbHVlKTsKICAgIH0KICAgIGlmIChneXJNYXRjaCkgewogICAgICB2YXIgaW5kZXggPSAwOwogICAgICBpZiAoZ3lyTWF0Y2hbMl0udG9Mb3dlckNhc2UoKSA9PT0gJ3dhcm5pbmcnKSB7CiAgICAgICAgaW5kZXggPSAxOwogICAgICB9IGVsc2UgaWYgKGd5ck1hdGNoWzJdLnRvTG93ZXJDYXNlKCkgPT09ICdlcnJvcicpIHsKICAgICAgICBpbmRleCA9IDI7CiAgICAgIH0KICAgICAgZm9ybWF0dGVkUGFsZXR0ZS5neXJbZ3lyTWF0Y2hbMV0gfHwgJ2RlZmF1bHQnXVtpbmRleF0gPSB2YWx1ZTsKICAgIH0KICAgIGlmIChrZXkgPT09ICdkZWZhdWx0JykgewogICAgICBmb3JtYXR0ZWRQYWxldHRlWyJkZWZhdWx0Il0gPSB2YWx1ZTsKICAgIH0KICB9KTsKICByZXR1cm4gZm9ybWF0dGVkUGFsZXR0ZTsKfQp2YXIgQ09MT1JTID0gZm9ybWF0Q29sb3JQYWxldHRlKENvbG9yUGFsZXR0ZSk7CmZ1bmN0aW9uIGdldFJhbmRvbUNvbG9yKCkgewogIHZhciBpbmRleCA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogbnVsbDsKICB2YXIgcGFsZXR0ZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogJ2RlZmF1bHQnOwogIHZhciBwYWxldHRlTGVuZ3RoID0gQ09MT1JTLnN0YXRlW3BhbGV0dGVdLmxlbmd0aDsKICBpZiAoIWluZGV4KSB7CiAgICByZXR1cm4gQ09MT1JTLnN0YXRlW3BhbGV0dGVdW18ucmFuZG9tKDAsIHBhbGV0dGVMZW5ndGggLSAxKV07CiAgfQogIHRyeSB7CiAgICAvLyBpbmRleCAlIGxlbmd0aCBtYWtlcyBzdXJlIHRoYXQgaW5kZXggaXMgaW4gcmFuZ2UKICAgIHJldHVybiBDT0xPUlMuc3RhdGVbcGFsZXR0ZV1baW5kZXggJSBwYWxldHRlTGVuZ3RoXTsKICB9IGNhdGNoIChlcnJvcikgewogICAgLy8gaWYgZXJyb3IsIHJldHVybnMgYSByYW5kb20gbm9ybWFsIGNvbG9yCiAgICByZXR1cm4gQ09MT1JTLnN0YXRlW3BhbGV0dGVdW18ucmFuZG9tKDAsIHBhbGV0dGVMZW5ndGggLSAxKV07CiAgfQp9CmZ1bmN0aW9uIGdldENvbG9yQnlOYW1lKG5hbWUsIHBhbGV0dGUpIHsKICB2YXIgZ3lyTWF0Y2ggPSBuYW1lLm1hdGNoKC8oc3VjY2Vzc3x3YXJuaW5nfGVycm9yKS8pOwogIHZhciBzdGF0ZU1hdGNoID0gbmFtZS5tYXRjaCgvc3RhdGUoWzAtOV0rKS8pOwogIGlmIChuYW1lID09PSAnZGVmYXVsdCcpIHsKICAgIHJldHVybiBDT0xPUlNbImRlZmF1bHQiXTsKICB9CiAgaWYgKGd5ck1hdGNoKSB7CiAgICB2YXIgZ3lySW5kZXggPSAwOwogICAgaWYgKGd5ck1hdGNoWzFdLnRvTG93ZXJDYXNlKCkgPT09ICd3YXJuaW5nJykgewogICAgICBneXJJbmRleCA9IDE7CiAgICB9IGVsc2UgaWYgKGd5ck1hdGNoWzFdLnRvTG93ZXJDYXNlKCkgPT09ICdlcnJvcicpIHsKICAgICAgZ3lySW5kZXggPSAyOwogICAgfQogICAgcmV0dXJuIENPTE9SUy5neXJbcGFsZXR0ZV1bZ3lySW5kZXhdOwogIH0KICBpZiAoc3RhdGVNYXRjaCkgewogICAgdmFyIHN0YXRlSW5kZXggPSBzdGF0ZU1hdGNoWzFdIC0gMTsKICAgIHJldHVybiBDT0xPUlMuc3RhdGVbcGFsZXR0ZV1bc3RhdGVJbmRleF07CiAgfQoKICAvLyBJZiBubyBtYXRjaCwgcmV0dXJuIHJhbmRvbSBjb2xvcgogIHJldHVybiBnZXRSYW5kb21Db2xvcihfLnJhbmRvbSgwLCA4KSwgcGFsZXR0ZSk7Cn0KZnVuY3Rpb24gZ2V0Q29sb3IoaW5kZXgsIGNvbmZpZykgewogIHZhciBob3ZlciA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogZmFsc2U7CiAgdmFyIHBhbGV0dGUgPSBjb25maWcucGFsZXR0ZTsKICBpZiAoaG92ZXIpIHsKICAgIHZhciBwYWxldHRlcyA9IFsnZGVmYXVsdCcsICdkYXJrJywgJ2xpZ2h0J107CiAgICBwYWxldHRlID0gcGFsZXR0ZXNbKHBhbGV0dGVzLmluZGV4T2YocGFsZXR0ZSkgKyAxKSAlIHBhbGV0dGVzLmxlbmd0aF07CiAgfQogIGlmIChjb25maWcuZGF0YS5jb2xvcnNBcnJheSAmJiBjb25maWcuZGF0YS5jb2xvcnNBcnJheS5sZW5ndGgpIHsKICAgIHJldHVybiBnZXRDb2xvckJ5TmFtZShjb25maWcuZGF0YS5jb2xvcnNBcnJheVtpbmRleF0sIHBhbGV0dGUpOwogIH0KICBpZiAoY29uZmlnLmRhdGEuY29sb3IpIHsKICAgIHJldHVybiBnZXRDb2xvckJ5TmFtZShjb25maWcuZGF0YS5jb2xvciwgcGFsZXR0ZSk7CiAgfQogIHJldHVybiBnZXRSYW5kb21Db2xvcihpbmRleCwgcGFsZXR0ZSk7Cn0KZnVuY3Rpb24gZ2V0QXJyYXlPZkNvbG9ycyhsZW5ndGgsIGNvbmZpZykgewogIHZhciBob3ZlciA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogZmFsc2U7CiAgdmFyIGNvbG9yc0FycmF5ID0gW107CiAgZm9yICh2YXIgaW5kZXggPSAwOyBpbmRleCA8IGxlbmd0aDsgaW5kZXggKz0gMSkgewogICAgdmFyIGNvbG9yID0gZ2V0Q29sb3IoaW5kZXgsIGNvbmZpZywgaG92ZXIpOwogICAgY29sb3JzQXJyYXkucHVzaChjb2xvcik7CiAgfQogIHJldHVybiBjb2xvcnNBcnJheTsKfQpleHBvcnQgeyBnZXRBcnJheU9mQ29sb3JzLCBnZXRDb2xvciwgZ2V0Q29sb3JCeU5hbWUsIGdldFJhbmRvbUNvbG9yIH07"},null]}