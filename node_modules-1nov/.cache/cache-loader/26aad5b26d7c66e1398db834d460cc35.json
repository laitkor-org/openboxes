{"remainingRequest":"/opt/MTOBS-BIKASH/node_modules/babel-loader/lib/index.js?presets[]=@babel/react&presets[]=@babel/env!/opt/MTOBS-BIKASH/node_modules/eslint-loader/dist/cjs.js!/opt/MTOBS-BIKASH/src/js/components/load-demo-data/LoadDemoDataWelcome.jsx","dependencies":[{"path":"/opt/MTOBS-BIKASH/src/js/components/load-demo-data/LoadDemoDataWelcome.jsx","mtime":1698037748000},{"path":"/opt/MTOBS-BIKASH/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/MTOBS-BIKASH/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/opt/MTOBS-BIKASH/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7IHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH0KZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC4iKTsgfQpmdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7IGlmICghbykgcmV0dXJuOyBpZiAodHlwZW9mIG8gPT09ICJzdHJpbmciKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpOyBpZiAobiA9PT0gIk9iamVjdCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTsgaWYgKG4gPT09ICJNYXAiIHx8IG4gPT09ICJTZXQiKSByZXR1cm4gQXJyYXkuZnJvbShvKTsgaWYgKG4gPT09ICJBcmd1bWVudHMiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgfQpmdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikgeyBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH0KZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgeyB2YXIgX2kgPSBudWxsID09IGFyciA/IG51bGwgOiAidW5kZWZpbmVkIiAhPSB0eXBlb2YgU3ltYm9sICYmIGFycltTeW1ib2wuaXRlcmF0b3JdIHx8IGFyclsiQEBpdGVyYXRvciJdOyBpZiAobnVsbCAhPSBfaSkgeyB2YXIgX3MsIF9lLCBfeCwgX3IsIF9hcnIgPSBbXSwgX24gPSAhMCwgX2QgPSAhMTsgdHJ5IHsgaWYgKF94ID0gKF9pID0gX2kuY2FsbChhcnIpKS5uZXh0LCAwID09PSBpKSB7IGlmIChPYmplY3QoX2kpICE9PSBfaSkgcmV0dXJuOyBfbiA9ICExOyB9IGVsc2UgZm9yICg7ICEoX24gPSAoX3MgPSBfeC5jYWxsKF9pKSkuZG9uZSkgJiYgKF9hcnIucHVzaChfcy52YWx1ZSksIF9hcnIubGVuZ3RoICE9PSBpKTsgX24gPSAhMCkgeyA7IH0gfSBjYXRjaCAoZXJyKSB7IF9kID0gITAsIF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIG51bGwgIT0gX2lbInJldHVybiJdICYmIChfciA9IF9pWyJyZXR1cm4iXSgpLCBPYmplY3QoX3IpICE9PSBfcikpIHJldHVybjsgfSBmaW5hbGx5IHsgaWYgKF9kKSB0aHJvdyBfZTsgfSB9IHJldHVybiBfYXJyOyB9IH0KZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9CmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JzsKaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJzsKaW1wb3J0IFRyYW5zbGF0ZSBmcm9tICd1dGlscy9UcmFuc2xhdGUnOwppbXBvcnQgeyBMT0FEX0RBVEFfU1RFUFMgfSBmcm9tICcuL0xvYWREZW1vRGF0YVBhZ2UnOwp2YXIgTG9hZERlbW9EYXRhV2VsY29tZSA9IGZ1bmN0aW9uIExvYWREZW1vRGF0YVdlbGNvbWUoX3JlZikgewogIHZhciBza2lwQ29uZmlndXJhdGlvbiA9IF9yZWYuc2tpcENvbmZpZ3VyYXRpb24sCiAgICBnb1RvU3RlcCA9IF9yZWYuZ29Ub1N0ZXA7CiAgdmFyIF91c2VTdGF0ZSA9IHVzZVN0YXRlKG51bGwpLAogICAgX3VzZVN0YXRlMiA9IF9zbGljZWRUb0FycmF5KF91c2VTdGF0ZSwgMiksCiAgICBsb2FkRGF0YU9wdGlvbiA9IF91c2VTdGF0ZTJbMF0sCiAgICBzZXRMb2FkRGF0YU9wdGlvbiA9IF91c2VTdGF0ZTJbMV07CiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LCBudWxsLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiaDMiLCB7CiAgICBjbGFzc05hbWU6ICJmb250LXdlaWdodC1ib2xkIG15LTMiCiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoVHJhbnNsYXRlLCB7CiAgICBpZDogInJlYWN0LmxvYWREYXRhLndlbGNvbWVIZWFkZXIubGFiZWwiLAogICAgZGVmYXVsdE1lc3NhZ2U6ICJXZWxjb21lIHRvIE9wZW5Cb3hlcyEiCiAgfSkpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgicCIsIHsKICAgIGNsYXNzTmFtZTogIm15LTMiCiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoVHJhbnNsYXRlLCB7CiAgICBpZDogInJlYWN0LmxvYWREYXRhLndlbGNvbWVEZXNjcmlwdGlvbi5sYWJlbCIsCiAgICBvcHRpb25zOiB7CiAgICAgIHJlbmRlcklubmVySHRtbDogdHJ1ZQogICAgfQogIH0pKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgIG9uQ2hhbmdlOiBmdW5jdGlvbiBvbkNoYW5nZShlKSB7CiAgICAgIHJldHVybiBzZXRMb2FkRGF0YU9wdGlvbihlLnRhcmdldC52YWx1ZSk7CiAgICB9CiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJpbnB1dCIsIHsKICAgIG5hbWU6ICJsb2NhdGlvbi1kYXRhIiwKICAgIHR5cGU6ICJyYWRpbyIsCiAgICBpZDogTE9BRF9EQVRBX1NURVBTLmxvYWREZW1vRGF0YSwKICAgIHZhbHVlOiBMT0FEX0RBVEFfU1RFUFMubG9hZERlbW9EYXRhLAogICAgY2hlY2tlZDogbG9hZERhdGFPcHRpb24gPT09IExPQURfREFUQV9TVEVQUy5sb2FkRGVtb0RhdGEKICB9KSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImxhYmVsIiwgewogICAgaHRtbEZvcjogTE9BRF9EQVRBX1NURVBTLmxvYWREZW1vRGF0YSwKICAgIGNsYXNzTmFtZTogImZvbnQtd2VpZ2h0LWJvbGQgbWwtMSIKICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChUcmFuc2xhdGUsIHsKICAgIGlkOiAicmVhY3QubG9hZERhdGEubG9hZERlbW9EYXRhLmxhYmVsIiwKICAgIGRlZmF1bHRNZXNzYWdlOiAiTG9hZCBEZW1vIERhdGEiCiAgfSkpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgicCIsIHsKICAgIGNsYXNzTmFtZTogIm1sLTQiCiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoVHJhbnNsYXRlLCB7CiAgICBpZDogInJlYWN0LmxvYWREYXRhLmxvYWREZW1vRGF0YS5kZXNjcmlwdGlvbi5sYWJlbCIKICB9KSkpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImlucHV0IiwgewogICAgbmFtZTogImxvY2F0aW9uLWRhdGEiLAogICAgdHlwZTogInJhZGlvIiwKICAgIGlkOiBMT0FEX0RBVEFfU1RFUFMuY3JlYXRlRmlyc3RMb2NhdGlvbiwKICAgIHZhbHVlOiBMT0FEX0RBVEFfU1RFUFMuY3JlYXRlRmlyc3RMb2NhdGlvbiwKICAgIGNoZWNrZWQ6IGxvYWREYXRhT3B0aW9uID09PSBMT0FEX0RBVEFfU1RFUFMuY3JlYXRlRmlyc3RMb2NhdGlvbgogIH0pLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgibGFiZWwiLCB7CiAgICBodG1sRm9yOiBMT0FEX0RBVEFfU1RFUFMuY3JlYXRlRmlyc3RMb2NhdGlvbiwKICAgIGNsYXNzTmFtZTogImZvbnQtd2VpZ2h0LWJvbGQgbWwtMSIKICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChUcmFuc2xhdGUsIHsKICAgIGlkOiAicmVhY3QubG9hZERhdGEuY3JlYXRlRmlyc3RMb2NhdGlvbi5sYWJlbCIsCiAgICBkZWZhdWx0TWVzc2FnZTogIkNyZWF0ZSB5b3VyIEZpcnN0IExvY2F0aW9uIgogIH0pKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoInAiLCB7CiAgICBjbGFzc05hbWU6ICJtbC00IgogIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFRyYW5zbGF0ZSwgewogICAgaWQ6ICJyZWFjdC5sb2FkRGF0YS5jcmVhdGVGaXJzdExvY2F0aW9uLmRlc2NyaXB0aW9uLmxhYmVsIgogIH0pKSkpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgewogICAgY2xhc3NOYW1lOiAiZC1mbGV4IGp1c3RpZnktY29udGVudC1iZXR3ZWVuIGFsaWduLWl0ZW1zLWNlbnRlciBtLTMiCiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImEiLCB7CiAgICBocmVmOiAiIyIsCiAgICBvbkNsaWNrOiBza2lwQ29uZmlndXJhdGlvbiwKICAgIGNsYXNzTmFtZTogImJ0biBidG4tbGluayIKICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChUcmFuc2xhdGUsIHsKICAgIGlkOiAicmVhY3QubG9hZERhdGEuc2tpcEZvck5vdy5sYWJlbCIsCiAgICBkZWZhdWx0TWVzc2FnZTogIlNraXAgZm9yIG5vdyIKICB9KSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJidXR0b24iLCB7CiAgICBkaXNhYmxlZDogIWxvYWREYXRhT3B0aW9uLAogICAgb25DbGljazogZnVuY3Rpb24gb25DbGljaygpIHsKICAgICAgcmV0dXJuIGdvVG9TdGVwKGxvYWREYXRhT3B0aW9uKTsKICAgIH0sCiAgICB0eXBlOiAiYnV0dG9uIiwKICAgIGNsYXNzTmFtZTogImJ0biBidG4tb3V0bGluZS1wcmltYXJ5IgogIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFRyYW5zbGF0ZSwgewogICAgaWQ6ICJkZWZhdWx0LmJ1dHRvbi5uZXh0LmxhYmVsIiwKICAgIGRlZmF1bHRNZXNzYWdlOiAiTmV4dCIKICB9KSkpKTsKfTsKTG9hZERlbW9EYXRhV2VsY29tZS5wcm9wVHlwZXMgPSB7CiAgc2tpcENvbmZpZ3VyYXRpb246IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCwKICBnb1RvU3RlcDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkCn07CmV4cG9ydCBkZWZhdWx0IExvYWREZW1vRGF0YVdlbGNvbWU7"},null]}